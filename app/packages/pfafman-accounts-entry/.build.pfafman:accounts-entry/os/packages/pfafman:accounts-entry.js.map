{"version":3,"file":"/packages/pfafman:accounts-entry.js","sources":["pfafman:accounts-entry/server/entry.coffee","pfafman:accounts-entry/shared/router.coffee"],"names":[],"mappings":"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","sourcesContent":["Meteor.startup ->\n  Accounts.urls.resetPassword = (token) ->\n    Meteor.absoluteUrl('reset-password/' + token)\n\n  Accounts.urls.verifyEmail = (token) ->\n    Meteor.absoluteUrl('verify-email/' + token)\n\n  AccountsEntry =\n    settings: {}\n\n    config: (appConfig) ->\n      @settings = _.extend(@settings, appConfig)\n\n  @AccountsEntry = AccountsEntry\n\n  Meteor.methods\n    entryValidateSignupCode: (signupCode) ->\n      check signupCode, Match.OneOf(String, null, undefined)\n      not AccountsEntry.settings.signupCode or signupCode is AccountsEntry.settings.signupCode\n\n    entryCreateUser: (user) ->\n      check user, Object\n      profile = AccountsEntry.settings.defaultProfile || {}\n      if user.username\n        userId = Accounts.createUser\n          username: user.username,\n          email: user.email,\n          password: user.password,\n          profile: _.extend(profile, user.profile)\n      else\n        userId = Accounts.createUser\n          email: user.email\n          password: user.password\n          profile: _.extend(profile, user.profile)\n      if (user.email && Accounts._options.sendVerificationEmail)\n        @unblock()\n        Accounts.sendVerificationEmail(userId, user.email)\n","\n\nRouter.map ->\n\n  @route \"entrySignIn\",\n    path: \"/sign-in\"\n    onBeforeAction: ->\n      Session.set('entryError', undefined)\n      Session.set('buttonText', 'in')\n      # TEP:  Added to make things work !?!?!\n      #if Router.current().route?.name not in AccountsEntry.routeNames\n      #  Session.set('fromWhere', Router.current().path)\n    onRun: ->\n      console.log(\"onRun\")\n      Session.set('entryError', undefined)\n      if Meteor.userId()\n        Router.go AccountsEntry.settings.dashboardRoute\n\n      if AccountsEntry.settings.signInTemplate\n        @template = AccountsEntry.settings.signInTemplate\n\n        # If the user has a custom template, and not using the helper, then\n        # maintain the package Javascript so that OpenGraph tags and share\n        # buttons still work.\n        pkgRendered= Template.entrySignIn.rendered\n        userRendered = Template[@template].rendered\n\n        if userRendered\n          Template[@template].rendered = ->\n            pkgRendered.call(@)\n            userRendered.call(@)\n        else\n          Template[@template].rendered = pkgRendered\n\n        Template[@template].events(AccountsEntry.entrySignInEvents)\n        Template[@template].helpers(AccountsEntry.entrySignInHelpers)\n\n\n  @route \"entrySignUp\",\n    path: \"/sign-up\"\n    onBeforeAction: ->\n      Session.set('entryError', undefined)\n      Session.set('buttonText', 'up')\n    onRun: ->\n      if AccountsEntry.settings.signUpTemplate\n        @template = AccountsEntry.settings.signUpTemplate\n\n        # If the user has a custom template, and not using the helper, then\n        # maintain the package Javascript so that OpenGraph tags and share\n        # buttons still work.\n        pkgRendered= Template.entrySignUp.rendered\n        userRendered = Template[@template].rendered\n\n        if userRendered\n          Template[@template].rendered = ->\n            pkgRendered.call(@)\n            userRendered.call(@)\n        else\n          Template[@template].rendered = pkgRendered\n\n        Template[@template].events(AccountsEntry.entrySignUpEvents)\n        Template[@template].helpers(AccountsEntry.entrySignUpHelpers)\n\n\n  @route \"entryForgotPassword\",\n    path: \"/forgot-password\"\n    onBeforeAction: ->\n      Session.set('entryError', undefined)\n\n  @route 'entrySignOut',\n    path: '/sign-out'\n    onBeforeAction: (pause)->\n      Session.set('entryError', undefined)\n      if AccountsEntry?.settings?.homeRoute?\n        Meteor.logout () ->\n          Router.go AccountsEntry.settings.homeRoute\n      pause()\n\n  @route 'entryResetPassword',\n    path: 'reset-password/:resetToken'\n    onBeforeAction: ->\n      Session.set('entryError', undefined)\n      Session.set('resetToken', @params.resetToken)\n\n  # TEP:  Add for it seems the normal URL gets swallowed\n  @route 'entryVerifyEmail',\n    path: 'verify-email/:token'\n    onBeforeAction: (pause) ->\n      try\n        Accounts.verifyEmail @params.token, ->\n          console.log(\"Email Verified\")\n          AccountsEntry?.settings?.verifyEmailCallback?()\n      catch e\n        console.log(\"Email verify error\", e)\n        AccountsEntry?.settings?.verifyEmailCallback?(e)\n      if AccountsEntry?.settings?.homeRoute?\n        Router.go AccountsEntry.settings.homeRoute\n      pause()\n\n\nif Meteor.isClient\n  # Get all the accounts-entry routes one time\n  exclusions = [];\n  _.each Router.routes, (route)->\n    exclusions.push route.name\n  # Change the fromWhere session variable when you leave a path\n  Router.onStop ->\n    # If the route is an entry route, no need to save it\n    if (!_.contains(exclusions, Router.current().route.name))\n      Session.set('fromWhere', Router.current().path)\n"]}